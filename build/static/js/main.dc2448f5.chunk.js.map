{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","fetchUrl","loading","deleteItem","bind","assertThisInitialized","completeItem","addItem","_this2","axios","get","then","result","dataList","sort","a","b","keyA","Date","deadline","keyB","setState","console","log","fetchTaskList","url","remainder","map","task","objectSpread","completed","put","filteredItems","filter","delete","title","_this3","desc","concat","toConsumableArray","post","response","dataCopy","shift","catch","error","alert","loadOrTasklist","react_default","createElement","class","className","role","App_TaskList","remove","complete","App_Progress","App_TaskInput","add","Component","Progress","style","width","count","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","length","calcProgres","props","aria-valuenow","aria-valuemin","aria-valuemax","TaskInput","_this4","handleSubmit","event","preventDefault","target","onSubmit","type","placeholder","name","TaskList","_this5","rend","d","App_Task","pkId","substr","key","Task","_this6","id","onClick","aria-hidden","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mPAGMA,cACF,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,KAAM,GACNC,SAAU,mCACVC,SAAS,GAEbV,EAAKW,WAAaX,EAAKW,WAAWC,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAClBA,EAAKc,aAAed,EAAKc,aAAaF,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACpBA,EAAKe,QAAUf,EAAKe,QAAQH,KAAbX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KATLA,+EAWE,IAAAgB,EAAAb,KACZc,IAAMC,IAAIf,KAAKI,MAAME,UAChBU,KAAK,SAAAC,GACF,IAAIC,EAAUD,EAAOZ,KACrBa,EAASC,KAAK,SAASC,EAAGC,GACtB,IAAIC,EAAO,IAAIC,KAAKH,EAAEI,UAClBC,EAAO,IAAIF,KAAKF,EAAEG,UAEtB,OAAGF,EAAOG,GAAc,EACrBH,EAAOG,EAAa,EAChB,IAGXZ,EAAKa,SAAS,CACVrB,KAAMa,EACNX,SAAS,IAEboB,QAAQC,IAAIf,EAAKT,sDAIzBJ,KAAK6B,qDAMIC,GACT,IAAIC,EAAY/B,KAAKI,MAAMC,KAAK2B,IAAI,SAACC,GACjC,OAAIA,EAAKH,MAAQA,GACbG,EAAInC,OAAAoC,EAAA,EAAApC,CAAA,GAAQmC,EAAR,CAAcE,WAAYF,EAAKE,YACnCrB,IAAMsB,IAAIN,EAAKG,GACRA,GAEJA,IAEXjC,KAAK0B,SAAS,CAAErB,KAAM0B,uCAGfD,GACP,IAAIO,EAAgBrC,KAAKI,MAAMC,KAAKiC,OAAO,SAAUL,GACjD,OAAQA,EAAKH,MAAQA,IAEzB9B,KAAK0B,SAAS,CACVrB,KAAMgC,IAEVvB,IAAMyB,OAAOT,mCAETU,GAAO,IAAAC,EAAAzC,KACPK,EAAO,CACPmC,MAASA,EACTE,KAAQF,EACRL,WAAW,EACXL,IAAK,4CAGT9B,KAAK0B,SAAS,CACVrB,KAAI,CAAGA,GAAHsC,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAYE,KAAKI,MAAMC,SAE/BS,IAAM+B,KAAK7C,KAAKI,MAAME,SAAUD,GAAMW,KAAK,SAAC8B,GACxC,IAAIC,EAAWN,EAAKrC,MAAMC,KAC1B0C,EAASC,QACTP,EAAKf,SAAS,CACVrB,KAAI,CAAGyC,EAASzC,MAAZsC,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAqBiD,MAE7BpB,QAAQC,IAAIkB,KACbG,MAAO,SAACC,GACP,IAAIH,EAAWN,EAAKrC,MAAMC,KAC1B0C,EAASC,QACTP,EAAKf,SAAS,CACVrB,KAAM0C,IAEVI,MAAMD,EAAMJ,SAASzC,KAAKmC,0CAM9B,IAAIY,EAeJ,OAbIA,EADApD,KAAKI,MAAMG,QAEP8C,EAAAjC,EAAAkC,cAAA,OAAKC,MAAM,sCACPF,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,sCAAsCC,KAAK,UACtDJ,EAAAjC,EAAAkC,cAAA,QAAME,UAAU,WAAhB,gBAORH,EAAAjC,EAAAkC,cAACI,EAAD,CAAUrD,KAAML,KAAKI,MAAMC,KAAMsD,OAAQ3D,KAAKQ,WAAYoD,SAAU5D,KAAKW,eAI7E0C,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,aACXH,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,8DACXH,EAAAjC,EAAAkC,cAAA,2BAEJD,EAAAjC,EAAAkC,cAACO,EAAD,CAAUxD,KAAML,KAAKI,MAAMC,OAC3BgD,EAAAjC,EAAAkC,cAACQ,EAAD,CAAWC,IAAK/D,KAAKY,UACpBwC,UAhHCY,aAsHZC,mLAWE,OACIZ,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,iBACXH,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,gDAAgDC,KAAK,cAAcS,MAAO,CAAEC,MAXnG,SAAqB9D,GACjB,IAAI+D,EAAQ,EADWC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEvB,QAAAC,EAAAC,EAAcrE,EAAdsE,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAoBI,EAAAM,MACV5C,WACFiC,IAJe,MAAAY,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAOvB,OAAe,IAARH,EAAc/D,EAAK6E,OAI4EC,CAAYnF,KAAKoF,MAAM/E,MAAQ,KAAOgF,gBAAc,IAAIC,gBAAc,IAAIC,gBAAc,gBAbnLvB,aAkBjBwB,cACF,SAAAA,EAAYJ,GAAO,IAAAK,EAAA,OAAA3F,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACfC,EAAA3F,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,KAAMoF,KACDM,aAAeD,EAAKC,aAAajF,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAA2F,KAFLA,4EAINE,GACTA,EAAMC,iBACN5F,KAAKoF,MAAMrB,IAAI4B,EAAME,OAAOrD,MAAMuC,OAClCY,EAAME,OAAOrD,MAAMuC,MAAQ,oCAM3B,OADApD,QAAQC,IAAI5B,KAAKoF,OAEb/B,EAAAjC,EAAAkC,cAAA,QAAMwC,SAAU9F,KAAK0F,cACjBrC,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,oBACXH,EAAAjC,EAAAkC,cAAA,SAAOE,UAAU,kCAAkCuC,KAAK,OAAOC,YAAY,eAAeC,KAAK,UAC/F5C,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,+BACXH,EAAAjC,EAAAkC,cAAA,UAAQyC,KAAK,SAASvC,UAAU,qCAAoCH,EAAAjC,EAAAkC,cAAA,QAAME,UAAU,0BAnBpFQ,aA4BlBkC,mLACO,IAAAC,EAAAnG,KACL,GAAuB,MAAnBA,KAAKoF,MAAM/E,KACX,IAAI+F,EAAOpG,KAAKoF,MAAM/E,KAAK2B,IAAI,SAACqE,GAAD,OAAOhD,EAAAjC,EAAAkC,cAACgD,EAAD,CAAMD,EAAGA,EAAG1C,OAAQwC,EAAKf,MAAMzB,OAAQC,SAAUuC,EAAKf,MAAMxB,SAAU2C,KAAMF,EAAEvE,IAAI0E,QAAQ,GAAIC,IAAKJ,EAAEvE,IAAI0E,QAAQ,OAC3J,OACInD,EAAAjC,EAAAkC,cAAA,WACK8C,UANMpC,aAajB0C,mLACO,IAAAC,EAAA3G,KAEL,OACIqD,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,aACXH,EAAAjC,EAAAkC,cAAA,OAAKE,UAAU,0BAA0BoD,GAAI,UAAY5G,KAAKoF,MAAMmB,MAEhElD,EAAAjC,EAAAkC,cAAA,UAAQE,UAAU,8CAA8CqD,QAAS,kBAAMF,EAAKvB,MAAMxB,SAAS+C,EAAKvB,MAAMiB,EAAEvE,OAC5GuB,EAAAjC,EAAAkC,cAAA,QAAMwD,cAAY,OAAOtD,UAAU,iBAN1BmD,EAAKvB,MAAMiB,EAAElE,UAAckB,EAAAjC,EAAAkC,cAAA,cAASqD,EAAKvB,MAAMiB,EAAE7D,MAAtB,KAA0CmE,EAAKvB,MAAMiB,EAAE7D,MAS/Fa,EAAAjC,EAAAkC,cAAA,UAAQE,UAAU,8CAA8CqD,QAAS,kBAAMF,EAAKvB,MAAMzB,OAAOgD,EAAKvB,MAAMiB,EAAEvE,OAC1GuB,EAAAjC,EAAAkC,cAAA,QAAMwD,cAAY,OAAOtD,UAAU,0BAZxCQ,aAoBJpE,IC5LKmH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOhE,EAAAjC,EAAAkC,cAACgE,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3G,KAAK,SAAA4G,GACjCA,EAAaC","file":"static/js/main.dc2448f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            fetchUrl: \"http://35.225.13.220:8000/tasks/\",\n            loading: true,\n        }\n        this.deleteItem = this.deleteItem.bind(this);\n        this.completeItem = this.completeItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n    fetchTaskList() {\n        axios.get(this.state.fetchUrl)\n            .then(result => {\n                let dataList= result.data;\n                dataList.sort(function(a, b){\n                    var keyA = new Date(a.deadline),\n                        keyB = new Date(b.deadline);\n                    // Compare the 2 dates\n                    if(keyA < keyB) return -1;\n                    if(keyA > keyB) return 1;\n                    return 0;\n                });\n\n                this.setState({\n                    data: dataList,\n                    loading: false,\n                });\n                console.log(this.state);\n            })\n    }\n    componentWillMount() {\n        this.fetchTaskList();\n    }\n    // componentDidMount() {\n    //     this.fetchTaskList();\n\n    // }\n    completeItem(url) {\n        var remainder = this.state.data.map((task) => {\n            if (task.url === url) {\n                task = { ...task, completed: !task.completed };\n                axios.put(url, task);\n                return task;\n            }\n            return task;\n        });\n        this.setState({ data: remainder });\n\n    }\n    deleteItem(url) {\n        var filteredItems = this.state.data.filter(function (task) {\n            return (task.url !== url)\n        });\n        this.setState({\n            data: filteredItems,\n        });\n        axios.delete(url);\n    }\n    addItem(title) {\n        var data = {\n            \"title\": title,\n            \"desc\": title,\n            completed: false,\n            url: 'http://sometempurl.com/sldfjasdfhlsafklj',\n\n        }\n        this.setState({\n            data: [data, ...this.state.data],\n        })\n        axios.post(this.state.fetchUrl, data).then((response) => {\n            var dataCopy = this.state.data;\n            dataCopy.shift()\n            this.setState({\n                data: [response.data, ...dataCopy],\n            })        \n            console.log(response);\n        }).catch( (error)=> {\n            var dataCopy = this.state.data;\n            dataCopy.shift()\n            this.setState({\n                data: dataCopy,\n            })\n            alert(error.response.data.title);\n        });\n\n\n    }\n    render() {\n        let loadOrTasklist;\n        if (this.state.loading) {\n            loadOrTasklist = (\n                <div class=\"d-flex justify-content-center mt-5\">\n                    <div className=\"spinner-grow text-success container\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            loadOrTasklist = (\n                <TaskList data={this.state.data} remove={this.deleteItem} complete={this.completeItem} />\n            )\n        }\n        return (\n            <div className=\"container\">\n                <div className=\" mt-4 jumbotron  jumbotron-fluid text-center text-success \">\n                    <h3> Todo List  </h3>\n                </div>\n                <Progress data={this.state.data} />\n                <TaskInput add={this.addItem} />\n                {loadOrTasklist}\n\n            </div>\n        )\n    }\n}\nclass Progress extends Component {\n    render() {\n        function calcProgres(data) {\n            let count = 0;\n            for (var i of data) {\n                if (i.completed) {\n                    count++;\n                }\n            }\n            return count * 100 / data.length;\n        }\n        return (\n            <div className=\"progress mb-4\">\n                <div className=\"progress-bar bg-success progress-bar-animated\" role=\"progressbar\" style={{ width: calcProgres(this.props.data) + '%' }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            </div>\n        );\n    }\n}\nclass TaskInput extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.add(event.target.title.value);\n        event.target.title.value = '';\n\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"input-group my-4\">\n                    <input className=\"form-control bg-light text-dark\" type=\"text\" placeholder='Add Task... ' name='title' />\n                    <div className=\"input-group-append bg-light\">\n                        <button type=\"submit\" className=\"btn btn-outline-success border-0 \"><span className=\"fa fa-plus\"></span></button>\n                    </div>\n                </div>\n            </form>\n        )\n\n    }\n\n}\nclass TaskList extends Component {\n    render() {\n        if (this.props.data != null)\n            var rend = this.props.data.map((d) => <Task d={d} remove={this.props.remove} complete={this.props.complete} pkId={d.url.substr(-5)} key={d.url.substr(-5)} />);\n        return (\n            <div>\n                {rend}\n\n            </div>\n        )\n    }\n\n}\nclass Task extends Component {\n    render() {\n        var renderTitle = () => (this.props.d.completed) ? (<strike>{this.props.d.title} </strike>) : this.props.d.title;\n        return (\n            <div className=\"card mb-3\">\n                <div className=\"card-header text-center\" id={\"heading\" + this.props.pkId}>\n\n                    <button className='btn float-left btn-outline-success border-0' onClick={() => this.props.complete(this.props.d.url)}>\n                        <span aria-hidden='true' className=\"fa fa-check\"></span>\n                    </button>\n                    {renderTitle()}\n                    <button className='btn float-right btn-outline-danger border-0' onClick={() => this.props.remove(this.props.d.url)}>\n                        <span aria-hidden=\"true\" className='fa fa-times' ></span>\n                    </button>\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}