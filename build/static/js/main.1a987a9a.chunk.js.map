{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","fetchUrl","deleteItem","bind","assertThisInitialized","completeItem","addItem","_this2","axios","get","then","result","setState","console","log","fetchTaskList","url","remainder","map","task","objectSpread","completed","put","filteredItems","filter","delete","title","_this3","desc","post","response","concat","toConsumableArray","react_default","a","createElement","className","class","App_Progress","App_TaskInput","add","App_TaskList","remove","complete","Component","Progress","role","style","width","count","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","length","calcProgres","props","aria-valuenow","aria-valuemin","aria-valuemax","TaskInput","_this4","handleSubmit","event","preventDefault","target","onSubmit","type","placeholder","name","TaskList","_this5","rend","d","App_Task","pkId","substr","key","Task","_this6","id","onClick","aria-hidden","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a987a9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            fetchUrl: \"http://127.0.0.1:8000/tasks/\",\n        }\n        this.deleteItem = this.deleteItem.bind(this);\n        this.completeItem = this.completeItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n    fetchTaskList() {\n        axios.get(this.state.fetchUrl)\n            .then(result => {\n\n                this.setState({\n                    data: result.data,\n                });\n                console.log(this.state);\n            })\n    }\n    componentDidMount() {\n        this.fetchTaskList();\n\n    }\n    completeItem(url) {\n        var remainder = this.state.data.map((task) => {\n            if (task.url === url) {\n                task = { ...task, completed: !task.completed };\n                axios.put(url, task);\n                return task;\n            }\n            return task;\n        });\n        this.setState({ data: remainder });\n\n    }\n    deleteItem(url) {\n        var filteredItems = this.state.data.filter(function (task) {\n            return (task.url !== url)\n        });\n        this.setState({\n            data: filteredItems,\n        });\n        axios.delete(url);\n    }\n    addItem(title){\n        var data = {\n            \"title\": title,\n            \"desc\": title,\n            completed: false,\n\n        }\n        var stateData = this.state.data;\n        axios.post(this.state.fetchUrl,data ).then((response)=>{\n            this.setState({\n                data: [response.data, ...this.state.data],\n            })\n        });\n\n    }\n    render() {\n        return (\n            <div className=\"container\">\n          <div class=\" mt-4 jumbotron  jumbotron-fluid text-center text-success \">\n            <h3> To-Do List </h3>\n          </div>\n                <Progress data={this.state.data} />\n                <TaskInput add={this.addItem} />\n                <TaskList data={this.state.data} remove={this.deleteItem} complete={this.completeItem} />\n            </div>\n        )\n    }\n}\nclass Progress extends Component {\n    render() {\n        function calcProgres(data) {\n            let count = 0;\n            for (var i of data) {\n                if (i.completed) {\n                    count++;\n                }\n            }\n            return count * 100 / data.length;\n        }\n        return (\n            <div className=\"progress mb-4\">\n                <div className=\"progress-bar bg-success progress-bar-animated\" role=\"progressbar\" style={{ width: calcProgres(this.props.data) + '%' }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            </div>\n        );\n    }\n}\nclass TaskInput extends Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        this.props.add(event.target.title.value);\n        event.target.title.value ='';\n\n    }\n   \n    render(){\n        console.log(this.props);\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"input-group my-4\">\n                <input className=\"form-control bg-light text-dark\" type=\"text\" placeholder='Add Task... ' name='title'/>\n                <div className=\"input-group-append bg-light\">\n                <button type=\"submit\" className=\"btn btn-outline-success border-0 \"><span className=\"fa fa-plus\"></span></button>\n                </div>\n                </div>\n            </form>\n        )\n        \n    }\n\n}\nclass TaskList extends Component {\n    render() {\n        if (this.props.data != null)\n            var rend = this.props.data.map((d) => <Task d={d} remove={this.props.remove} complete={this.props.complete} pkId={d.url.substr(-5)} key = {d.url.substr(-5)} />);\n        return (\n            <div>\n                {rend}\n\n            </div>\n        )\n    }\n\n}\nclass Task extends Component {\n    render() {\n        var renderTitle = () => (this.props.d.completed) ? (<strike>{this.props.d.title} </strike>) : this.props.d.title;\n        return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header text-center\" id={\"heading\" + this.props.pkId}>\n                     \n                     <button className='btn float-left btn-outline-success border-0' onClick={() => this.props.complete(this.props.d.url)}>\n                         <span aria-hidden='true' className=\"fa fa-check\"></span>\n                     </button>\n                        {renderTitle()}\n                    <button className='btn float-right btn-outline-danger border-0' onClick={() => this.props.remove(this.props.d.url)}>\n                        <span aria-hidden=\"true\" className='fa fa-times' ></span>\n                    </button> \n                   \n              </div>\n            </div>\n        )\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}